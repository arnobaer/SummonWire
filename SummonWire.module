<?php namespace ProcessWire;

/**
 *
 * SummonWire - Summoning HTML5 code generator module for ProcessWire.
 * Copyright (C) 2018  Bernhard Arnold <bernhard.arnold@burgried.at>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */

class SummonWire extends WireData implements Module {

	/**
	 * getModuleInfo is a module required by all modules to tell ProcessWire about them
	 *
	 * @return array
	 *
	 */
	public static function getModuleInfo() {

		return array(

			// The module's title, typically a little more descriptive than the class name
			'title' => 'SummonWire',

			// version number
			'version' => '0.3.0',

			// summary is brief description of what this module is
			'summary' => 'Provides API to Summoning HTML5 code generator.',

			// Optional URL to more information about the module
			'href' => 'https://github.com/SummonWire',

			// singular=true: indicates that only one instance of the module is allowed.
			// This is usually what you want for modules that attach hooks.
			'singular' => true,

			// autoload=true: indicates the module should be started with ProcessWire.
			// This is necessary for any modules that attach runtime hooks, otherwise those
			// hooks won't get attached unless some other code calls the module on it's own.
			// Note that autoload modules are almost always also 'singular' (seen above).
			'autoload' => true,

			// Optional font-awesome icon name, minus the 'fa-' part
			'icon' => 'code',
			);
	}

	/**
	 * Initialize the module
	 *
	 */
	public function init() {
		require __DIR__ . '/Node.php';
	}

	/** Create new node instance
	 *
	 * @return \Summoning\Node
	 *
	 */
	public function create($tag) {
		return new \Summoning\Node($tag);
	}

}
